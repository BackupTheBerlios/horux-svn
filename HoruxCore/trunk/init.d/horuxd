#! /bin/sh
# Copyright (c) 1995-2002 SuSE GmbH Nuernberg, Germany.
#
# Author: Kurt Garloff <feedback@suse.de>
#
# /etc/init.d/horuxd
#
#   and symbolic its link
#
# /usr/bin/horuxd
#
# System startup script for the at daemon
#
### BEGIN INIT INFO
# Provides: horuxd
# Required-Start: $remote_fs mysql
# Required-Stop:  $remote_fs
# X-UnitedLinux-Default-Enabled: no
# Default-Start:  2 3 5
# Default-Stop:   0 1 6
# Description:    Start Horux job daemon
### END INIT INFO

ATD_BIN=/usr/share/horux/core/horuxd
test -x $ATD_BIN || exit 5

# Return values acc. to LSB for all commands but status:
# 0 - success
# 1 - generic or unspecified error
# 2 - invalid or excess argument(s)
# 3 - unimplemented feature (e.g. "reload")
# 4 - insufficient privilege
# 5 - program is not installed
# 6 - program is not configured
# 7 - program is not running
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signalling is not supported) are
# considered a success.

case "$1" in
    start)
	echo -n "Starting service at daemon"
	## Start daemon with startproc(8). If this fails
	## the echo return value is set appropriate.

	# NOTE: startproc return 0, even if service is 
	# already running to match LSB spec.
	$ATD_BIN

	;;
    stop)
	echo -n "Shutting down service at daemon"
	## Stop daemon with killproc(8) and if this fails
	## set echo the echo return value.

	$ATD_BIN -t

	;;
    try-restart)
	## Stop the service and if this succeeds (i.e. the 
	## service was running before), start it again.
	## Note: try-restart is not (yet) part of LSB (as of 0.7.5)
	$0 status >/dev/null &&  $0 restart

	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	$0 start

	;;
    force-reload)
	## Signal the daemon to reload its config. Most daemons
	## do this on signal 1 (SIGHUP).
	## If it does not support it, restart.

	echo -n "Reload service at daemon"

	## Otherwise:
	$0 stop  &&  $0 start
	;;
    reload)
	## Like force-reload, but if daemon does not support
	## signalling, do nothing (!)

	# If it supports signalling:
	echo -n "Reload service at daemon"
	
	;;
    status)
	echo -n "Checking for at daemon: "
	## Check status with checkproc(8), if process is running
	## checkproc will return with exit status 0.

	# Status has a slightly different for the status command:
	# 0 - service running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running

	# NOTE: checkproc returns LSB compliant status values.
	checkproc $ATD_BIN
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
	exit 1
	;;
esac

